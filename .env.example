# ==========================================
# SPONSORFLOW ENVIRONMENT CONFIGURATION
# ==========================================
# Copy this file to .env.local and fill in your values
# Never commit .env.local to version control!

# ==========================================
# APPLICATION
# ==========================================
NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_APP_NAME="SponsorFlow"
NEXT_PUBLIC_APP_DESCRIPTION="YouTube Sponsorship Workflow Management"
NEXT_PUBLIC_APP_VERSION="2.0.0"

# ==========================================
# DATABASE - PostgreSQL (Required)
# ==========================================
# Local development
DATABASE_URL="postgresql://sponsorflow_user:your_secure_password@localhost:5432/sponsorflow_db?schema=public"

# Production with connection pooling (e.g., Supabase, PlanetScale)
DATABASE_URL_NON_POOLING="postgresql://sponsorflow_user:your_secure_password@localhost:5432/sponsorflow_db?schema=public"

# Shadow database for migrations (development only)
SHADOW_DATABASE_URL="postgresql://sponsorflow_user:your_secure_password@localhost:5432/sponsorflow_shadow?schema=public"

# ==========================================
# AUTHENTICATION - NextAuth.js (Required)
# ==========================================
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET="your-super-secret-nextauth-secret-key-here-min-32-chars"
NEXTAUTH_URL="http://localhost:3000"

# ==========================================
# OAuth Providers (At least one required)
# ==========================================
# Google OAuth - https://console.cloud.google.com/
GOOGLE_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# GitHub OAuth (optional) - https://github.com/settings/developers
GITHUB_CLIENT_ID="your-github-client-id"
GITHUB_CLIENT_SECRET="your-github-client-secret"

# ==========================================
# EMAIL SERVICE (Required for notifications)
# ==========================================
# SMTP Configuration (Gmail example)
EMAIL_SERVER_HOST="smtp.gmail.com"
EMAIL_SERVER_PORT="587"
EMAIL_SERVER_USER="your-email@gmail.com"
EMAIL_SERVER_PASSWORD="your-app-specific-password"
EMAIL_FROM="SponsorFlow <noreply@sponsorflow.io>"

# Alternative: SendGrid
# SENDGRID_API_KEY="your-sendgrid-api-key"

# Alternative: Resend
# RESEND_API_KEY="your-resend-api-key"

# ==========================================
# REAL-TIME FEATURES (Optional)
# ==========================================
# WebSocket Server URL for real-time updates
NEXT_PUBLIC_WS_URL="ws://localhost:3001"
# Production: wss://ws.your-domain.com

# Pusher (alternative to custom WebSocket)
# PUSHER_APP_ID="your-pusher-app-id"
# PUSHER_KEY="your-pusher-key"
# NEXT_PUBLIC_PUSHER_KEY="your-pusher-key"
# PUSHER_SECRET="your-pusher-secret"
# PUSHER_CLUSTER="us2"

# ==========================================
# FILE STORAGE (Optional)
# ==========================================
# AWS S3 or Compatible Storage (for attachments)
# AWS_ACCESS_KEY_ID="your-aws-access-key"
# AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
# AWS_REGION="us-east-1"
# AWS_S3_BUCKET="sponsorflow-uploads"

# Alternative: Uploadthing
# UPLOADTHING_SECRET="your-uploadthing-secret"
# UPLOADTHING_APP_ID="your-uploadthing-app-id"

# ==========================================
# EXTERNAL APIs (Optional)
# ==========================================
# YouTube Data API v3 - https://console.cloud.google.com/
# YOUTUBE_API_KEY="your-youtube-api-key"

# ==========================================
# ANALYTICS & MONITORING (Optional)
# ==========================================
# Google Analytics 4
# NEXT_PUBLIC_GA_MEASUREMENT_ID="G-XXXXXXXXXX"

# Vercel Analytics (auto-configured on Vercel)
# NEXT_PUBLIC_VERCEL_ANALYTICS_ID="auto"

# PostHog Analytics
# NEXT_PUBLIC_POSTHOG_KEY="your-posthog-key"
# NEXT_PUBLIC_POSTHOG_HOST="https://app.posthog.com"

# Sentry Error Tracking
# SENTRY_DSN="https://your-key@sentry.io/your-project-id"
# NEXT_PUBLIC_SENTRY_DSN="https://your-key@sentry.io/your-project-id"
# SENTRY_ORG="your-org"
# SENTRY_PROJECT="sponsorflow"
# SENTRY_AUTH_TOKEN="your-sentry-auth-token"

# ==========================================
# RATE LIMITING & SECURITY (Production)
# ==========================================
# Upstash Redis for rate limiting
# UPSTASH_REDIS_REST_URL="https://your-redis-instance.upstash.io"
# UPSTASH_REDIS_REST_TOKEN="your-upstash-token"

# Rate limiting configuration
# RATE_LIMIT_MAX_REQUESTS="100"
# RATE_LIMIT_WINDOW_MS="60000"

# ==========================================
# FEATURE FLAGS (Optional)
# ==========================================
NEXT_PUBLIC_ENABLE_ANALYTICS="true"
NEXT_PUBLIC_ENABLE_PWA="false"
NEXT_PUBLIC_ENABLE_REALTIME="true"
NEXT_PUBLIC_MAINTENANCE_MODE="false"
NEXT_PUBLIC_ENABLE_BETA_FEATURES="false"

# ==========================================
# DEVELOPMENT TOOLS
# ==========================================
# Prisma Studio browser preference
BROWSER="none"

# Debug mode
DEBUG="sponsorflow:*"
NEXT_PUBLIC_DEBUG_MODE="false"

# ==========================================
# CRON JOBS SECURITY
# ==========================================
# Secret for securing cron job endpoints
CRON_SECRET="your-cron-secret-for-security"

# ==========================================
# MISCELLANEOUS
# ==========================================
# Application timezone
TZ="America/New_York"

# API Version for versioning
API_VERSION="v1"

# Cache TTL in seconds
CACHE_TTL="3600"

# Maximum file upload size in MB
MAX_FILE_SIZE="10"

# ==========================================
# QUICK START INSTRUCTIONS
# ==========================================
# 1. Copy this file: cp .env.example .env.local
# 2. Fill in your database credentials
# 3. Generate NEXTAUTH_SECRET: openssl rand -base64 32
# 4. Set up at least one OAuth provider (Google recommended)
# 5. Configure email service for notifications
# 6. Run: npm install && npm run db:setup && npm run dev
# ==========================================
